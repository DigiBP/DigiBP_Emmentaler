CREATE TABLE  "ANTRAG" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"TITLE" VARCHAR2(500) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(4000), 
	"APPLICANT" VARCHAR2(100) NOT NULL ENABLE, 
	"BUDGET" NUMBER, 
	"CATEGORY" VARCHAR2(255) NOT NULL ENABLE, 
	"SUBMISSION_DATE" TIMESTAMP (6) NOT NULL ENABLE, 
	"IS_REVIEWED" VARCHAR2(50), 
	"HAS_VETO" VARCHAR2(50), 
	"PROPOSAL_STATUS" VARCHAR2(100) NOT NULL ENABLE, 
	"REVIEW_DATE" TIMESTAMP (6), 
	"LINKS" VARCHAR2(4000), 
	"REVIEW_STATUS" VARCHAR2(100), 
	"IS_PITCH_NEEDED" VARCHAR2(50), 
	"VETO_START_DATE" TIMESTAMP (6), 
	"REVIEW_COMMENT" VARCHAR2(4000), 
	 CONSTRAINT "ANTRAG_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "TRI_ANTRAG_INSERT_START_PROCESS" 
AFTER
insert on "ANTRAG"
for each row
begin
START_CAMUNDA_PROCESS(:new.id, :new.budget, :new.category);
end;

/
ALTER TRIGGER  "TRI_ANTRAG_INSERT_START_PROCESS" ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "TRI_ANTRAG_UPDATE_SEND_REVIEW" 
AFTER
update of review_status on antrag
for each row
begin
SEND_REVIEW_OUTCOME(:OLD.ID, :NEW.REVIEW_STATUS);

end;

/
ALTER TRIGGER  "TRI_ANTRAG_UPDATE_SEND_REVIEW" ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "TRI_ANTRAG_UPDATE_SEND_VETO" 
AFTER
update of has_veto on antrag
for each row
 WHEN (new.has_veto = 'Yes') begin
SEND_VETO(:OLD.ID);

end;

/
ALTER TRIGGER  "TRI_ANTRAG_UPDATE_SEND_VETO" ENABLE
/


CREATE TABLE  "ANTRAG_CAMUNDA" 
   (	"INSTANCE_INFORMATION" VARCHAR2(4000), 
	"CAMUNDA_BODY" CLOB, 
	"ANTRAG_ID" NUMBER(10,0)
   )
/


 CREATE SEQUENCE   "SEQ_ANTRAG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
